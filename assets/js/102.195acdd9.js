(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{638:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_02-springboot-常用配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02-springboot-常用配置"}},[t._v("#")]),t._v(" 02-SpringBoot 常用配置")]),t._v(" "),s("h2",{attrs:{id:"一、tomcat配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、tomcat配置"}},[t._v("#")]),t._v(" 一、Tomcat配置")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-connections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8192")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accept-count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("800")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-threads")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("min-spare-threads")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n")])])]),s("ol",[s("li",[s("strong",[t._v("max-connections : 最大连接数")]),t._v("\ntomcat能够接受的最大连接数。\n对于Java的阻塞式BIO，默认值是maxthreads的值；如果在BIO模式使用定制的Executor执行器，默认值将是执行器中maxthreads的值。对于Java 新的NIO模式，maxConnections 默认值是10000。\n对于windows上APR/native IO模式，maxConnections默认值为8192，这是出于性能原因，如果配置的值不是1024的倍数，maxConnections 的实际值将减少到1024的最大倍数。\n如果设置为-1，则禁用maxconnections功能，表示不限制tomcat容器的连接数。\nmaxConnections和accept-count的关系为：当连接数达到最大值maxConnections后，系统会继续接收连接，但不会超过acceptCount的值")]),t._v(" "),s("li",[s("strong",[t._v("accept-count : 等待队列长度")]),t._v("\n当请求数量超过最大连接数量后，队列允许的等待数量。当队列再满时，任何的连接请求都将被拒绝。")]),t._v(" "),s("li",[s("strong",[t._v("max-threads : 最大线程数")]),t._v("\n每一次HTTP请求到达Web服务，tomcat都会创建一个线程来处理该请求，那么最大线程数决定了Web服务容器可以同时处理多少个请求。maxThreads默认200。JVM中默认情况下在创建新线程时会分配大小为1M的线程栈，所以，更多的线程异味着需要更多的内存。线程数的经验值为：1核2g内存，线程数经验值200；4核8g内存，线程数经验值800。")]),t._v(" "),s("li",[t._v("**min-spare-threads : 最小工作空闲线程数 **\n默认10, 适当增大一些，以便应对突然增长的访问量")])]),t._v(" "),s("h2",{attrs:{id:"二、spring提供默认线程池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、spring提供默认线程池"}},[t._v("#")]),t._v(" 二、Spring提供默认线程池")]),t._v(" "),s("h3",{attrs:{id:"spring-boot-在-taskexecutionautoconfiguration-默认提供了线程池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-在-taskexecutionautoconfiguration-默认提供了线程池"}},[t._v("#")]),t._v(" spring boot 在 TaskExecutionAutoConfiguration 默认提供了线程池")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     *  线程池名称：applicationTaskExecutor 、 taskExecutor\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Lazy")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("APPLICATION_TASK_EXECUTOR_BEAN_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AsyncAnnotationBeanPostProcessor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEFAULT_TASK_EXECUTOR_BEAN_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConditionalOnMissingBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadPoolTaskExecutor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("applicationTaskExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskExecutorBuilder")]),t._v(" builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否允许核心线程超时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.task.execution.pool.allow-core-thread-timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#核心线程数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.task.execution.pool.core-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("8")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许的最大线程数。默认：Integer.MAX_VALUE 如果任务正在填充队列，则池可以扩展到该大小以容纳负载。如果队列没有边界，则忽略")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.task.execution.pool.max-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("16")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#线程在终止前可以保持空闲的时间限制。默认：60秒")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.task.execution.pool.keep-alive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("60")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#队列容量。无限容量不会增加池，因此忽略“max size”属性。默认：Integer.MAX_VALUE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.task.execution.pool.queue-capacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("2000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 用于新创建线程名称的前缀。默认: "task-"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.task.execution.thread-name-prefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n")])])]),s("h2",{attrs:{id:"三、日志-spring-boot-starter-logging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、日志-spring-boot-starter-logging"}},[t._v("#")]),t._v(" 三、日志:spring-boot-starter-logging")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.file.name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("../log/demo-slf4j.log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.logback.rollingpolicy.max-history")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按256Mb切分日志，不配置的话，默认10m")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.logback.rollingpolicy.max-file-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("10MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必须要该路径，不然无法切分日志")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.file.path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("../log/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.pattern.console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger- %msg%n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.pattern.file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.level.root")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("info")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.level.web")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("debug")]),t._v("\n")])])]),s("h2",{attrs:{id:"四、spring-boot注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、spring-boot注解"}},[t._v("#")]),t._v(" 四、Spring Boot注解")])])}),[],!1,null,null,null);a.default=e.exports}}]);