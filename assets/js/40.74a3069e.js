(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{566:function(t,s,a){t.exports=a.p+"assets/img/2.19.76a2539c.png"},790:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_2-2-常用优化组件和方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-常用优化组件和方法"}},[t._v("#")]),t._v(" 2.2 常用优化组件和方法")]),t._v(" "),n("h2",{attrs:{id:"_2-2-1-缓冲-buffer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-缓冲-buffer"}},[t._v("#")]),t._v(" 2.2.1 缓冲（Buffer）")]),t._v(" "),n("p",[t._v("缓冲区是一块的定的内存区域。开辟缓冲区的目的是通过缓解应该程序上下层之间的性能差异，提高系统的性能。在日常生活中，缓冲的一个典型应用是漏斗，如图2.19所示：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(566),alt:""}})]),t._v(" "),n("p",[t._v("图2.19显示了漏斗作为缓冲区的使用场景。上层系统如茶壶，下层系统如水瓶。现需要将茶壶中的水倒入水瓶中，这就有如将内存中的数据写入硬盘中一样。茶壶的出水速度可以很快，但是水瓶的瓶口很细，因此形成性能瓶颈。要将水全部倒入瓶中，必须等待瓶口的水缓缓流下。为了加快速度，可以使用一个漏斗（缓冲）.")]),t._v(" "),n("p",[t._v("漏斗的初始口径很大，并且拥有一定的容量，因此，茶壶中的水可以先倒入漏斗中，就犹如内存数据先写入一块缓冲区。只要漏斗的容量够大，茶壶里的水很快就能倒完。至此，上层系统完成工作，可以去处理其他业务逻辑。而此时，水并未完全进入瓶中，而大部分被积累在漏斗中。就可以由下层系统慢慢处理，直到水完全进入瓶中，漏斗（缓冲区）被清空。")]),t._v(" "),n("p",[n("strong",[t._v("注意：缓冲可以协调上层组件和下层组件的性能差。当上层组件性能优于下层组件时，可以有效减少上层组件对下层组件的等待时间。")])]),t._v(" "),n("p",[t._v("基于这样的结果，上层应用组件不需要等待下层组件真实的接收全部数据，即可返回操作，加快了上层组件的处理速度，从而提升系统整体性能。")]),t._v(" "),n("p",[t._v("缓冲最常用的场景就是提高I/O的速度。为此，JDK内不少I/O组件都提供了缓冲功能。比如当使用FileWriter时，进行文件写操作的代码如下：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writer")]),t._v(" writer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileWriter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CIRCLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    writer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nwriter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testFileWriter speed:"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("为进行I/O优化，可以为FileWriter加上缓冲：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writer")]),t._v(" writer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedWriter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileWriter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CIRCLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    writer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nwriter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testFileWriter speed:"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("以上代码使用BufferedWriter 为 FileWriter 对象增加缓冲功能。BufferedWriter对象拥有两个构造方法：")]),t._v(" "),n("p",[t._v("public BufferedWriter(Writer out)")]),t._v(" "),n("p",[t._v("public BufferedWriter(Writer out,int size)")]),t._v(" "),n("p",[t._v("其中，第2个构造函数允许再应用层指定缓冲区的大小，第一个构造函数将构造大小为8K 的缓冲区。一般来说，缓冲区不宜过小，过小的缓冲区无法骑到真正的缓冲作用，缓冲区也不宜过大，过大的缓冲区会浪费系统内存，增加GC负担。本例中，设置循环次数CIRCLE为10万，若不使用缓冲区操作，则相对耗时62ms，而使用缓冲区的FileWriter近相对耗时32ms,性能提升一倍。")]),t._v(" "),n("p",[t._v("另一个有用的缓冲组件是BufferedOutputStream 。在前文“装饰者”中，已经提到，使用BufferedOutputStream可以包装所有的OutputStream，为其提供缓冲功能，提高输出流的效率。和BufferedWriter类似，它也提供了两个构造函数：")]),t._v(" "),n("p",[t._v("public BufferedOutputStream(OutputStream out)")]),t._v(" "),n("p",[t._v("public BufferedOutputStream(OutputStream out,int size)")]),t._v(" "),n("p",[t._v("第2个构造函数可以指定缓冲区大小，默认情况下，和BufferedWriter一样，缓冲区大小为8K。")]),t._v(" "),n("p",[t._v("除了能够改善I/O性能，缓冲区对任何一种上下层组件存在性能差异的场合都可以起到很好的效果。")]),t._v(" "),n("h2",{attrs:{id:"_2-2-2-缓存-cache"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-缓存-cache"}},[t._v("#")]),t._v(" 2.2.2 缓存（Cache）")]),t._v(" "),n("h2",{attrs:{id:"_2-2-3-对象复用-池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-对象复用-池"}},[t._v("#")]),t._v(" 2.2.3 对象复用——“池”")]),t._v(" "),n("h2",{attrs:{id:"_2-2-4-并行替代串行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-并行替代串行"}},[t._v("#")]),t._v(" 2.2.4 并行替代串行")]),t._v(" "),n("h2",{attrs:{id:"_2-2-5-负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-负载均衡"}},[t._v("#")]),t._v(" 2.2.5 负载均衡")]),t._v(" "),n("h2",{attrs:{id:"_2-2-6-时间换空间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-时间换空间"}},[t._v("#")]),t._v(" 2.2.6 时间换空间")]),t._v(" "),n("h2",{attrs:{id:"_2-2-7-空间换时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-空间换时间"}},[t._v("#")]),t._v(" 2.2.7 空间换时间")])])}),[],!1,null,null,null);s.default=e.exports}}]);