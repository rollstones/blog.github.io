(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{660:function(s,a,e){"use strict";e.r(a);var t=e(42),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"一、docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、docker"}},[s._v("#")]),s._v(" 一、Docker")]),s._v(" "),e("h2",{attrs:{id:"_1-安装docker-centos7-9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装docker-centos7-9"}},[s._v("#")]),s._v(" 1.安装docker（Centos7.9）")]),s._v(" "),e("h3",{attrs:{id:"_1-网址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-网址"}},[s._v("#")]),s._v(" 1)网址")]),s._v(" "),e("div",{staticClass:"language-tex extra-class"},[e("pre",{pre:!0,attrs:{class:"language-tex"}},[e("code",[s._v("Docker Hub\thttps://hub-stage.docker.com/\n官方文档\thttps://docs.docker.com/\n")])])]),e("h3",{attrs:{id:"_2-删除旧版本docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-删除旧版本docker"}},[s._v("#")]),s._v(" 2)删除旧版本docker")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum remove docker "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndocker-client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndocker-client-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndocker-common "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndocker-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndocker-latest-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndocker-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndocker-engine\n")])])]),e("h3",{attrs:{id:"_3-设置国内的镜像仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-设置国内的镜像仓库"}},[s._v("#")]),s._v(" 3)设置国内的镜像仓库")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新yum软件包索引")]),s._v("\nyum makecache fast\n")])])]),e("h3",{attrs:{id:"_4-安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-安装docker"}},[s._v("#")]),s._v(" 4)安装docker")]),s._v(" "),e("div",{staticClass:"language-ssh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("yum install docker\n#启动docker\nservice docker start\n")])])]),e("h3",{attrs:{id:"_5-aliyun加速镜像下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-aliyun加速镜像下载"}},[s._v("#")]),s._v(" 5)aliyun加速镜像下载")]),s._v(" "),e("div",{staticClass:"language-txt extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("阿里云镜像加速网址：\nhttps://cr.console.aliyun.com/cn-shanghai/instances/mirrors\n")])])]),e("p",[e("img",{attrs:{src:"docs/.vuepress/public/assets/img/aliyun.png",alt:"img"}})]),s._v(" "),e("h3",{attrs:{id:"_6-创建虚拟网段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-创建虚拟网段"}},[s._v("#")]),s._v(" 6)"),e("strong",[s._v("创建虚拟网段")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker network create -d bridge rollstones\n")])])]),e("h2",{attrs:{id:"_2-docker容器互联"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker容器互联"}},[s._v("#")]),s._v(" 2.docker容器互联")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建一个新的 Docker 网络 -d：参数指定 Docker 网络类型，有 bridge、overlay")]),s._v("\ndocker network create -d bridge rollstones\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看网络")]),s._v("\ndocker network "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#运行一个容器并连接到新建的 rollstones 网络")]),s._v("\ndocker run -itd --name test1 --network rollstones\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#再运行一个容器并连接到新建的 rollstones 网络")]),s._v("\ndocker run -itd --name test2 --network rollstones\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#test1 容器和 test2 容器建立了互联关系，现在即可用容器名字互相访问")]),s._v("\n")])])]),e("h2",{attrs:{id:"_3-docker-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-file"}},[s._v("#")]),s._v(" 3.docker file")]),s._v(" "),e("div",{staticClass:"language-tex extra-class"},[e("pre",{pre:!0,attrs:{class:"language-tex"}},[e("code",[s._v("\n")])])]),e("h2",{attrs:{id:"_4-docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-compose"}},[s._v("#")]),s._v(" 4.docker compose")]),s._v(" "),e("h3",{attrs:{id:"_1-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[s._v("#")]),s._v(" 1)介绍")]),s._v(" "),e("p",[s._v("Compose 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。使用前面介绍的Dockerfile我们很容易定义一个单独的应用容器。然而在日常开发工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器；再比如在分布式应用一般包含若干个服务，每个服务一般都会部署多个实例。如果每个服务都要手动启停，那么效率之低、维护量之大可想而知。这时候就需要一个工具能够管理一组相关联的的应用容器，这就是Docker Compose。")]),s._v(" "),e("p",[e("strong",[s._v("Compose有2个重要的概念：")])]),s._v(" "),e("ul",[e("li",[s._v("项目（Project）：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml 文件中定义。")]),s._v(" "),e("li",[s._v("服务（Service）：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。")])]),s._v(" "),e("p",[s._v("通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。")]),s._v(" "),e("p",[s._v("Compose 使用的三个步骤：")]),s._v(" "),e("ul",[e("li",[s._v("使用 Dockerfile 定义应用程序的环境。")]),s._v(" "),e("li",[s._v("使用 docker-compose.yml 定义构成应用程序的服务，这样它们可以在隔离环境中一起运行。")]),s._v(" "),e("li",[s._v("最后，执行 docker-compose up 命令来启动并运行整个应用程序。")])]),s._v(" "),e("h3",{attrs:{id:"_2-compose安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-compose安装"}},[s._v("#")]),s._v(" 2)compose安装")]),s._v(" "),e("div",{staticClass:"language-ssh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\n")])])]),e("h2",{attrs:{id:"_5-docker-安装-nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-安装-nginx"}},[s._v("#")]),s._v(" 5.docker 安装 Nginx")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull nginx:latest\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器")]),s._v("\ndocker run --name nginx -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 -d nginx\n\n")])])]),e("h2",{attrs:{id:"_6-docker-安装-tomcat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-docker-安装-tomcat"}},[s._v("#")]),s._v(" 6.docker 安装 Tomcat")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull tomcat\n\n")])])]),e("h2",{attrs:{id:"_7-docker-安装-mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-docker-安装-mysql"}},[s._v("#")]),s._v(" 7.docker 安装 Mysql")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 --network mybridge --name mysql -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root -d  mysql:5.7\n")])])]),e("h3",{attrs:{id:"_1-自定义配置安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义配置安装"}},[s._v("#")]),s._v(" 1）自定义配置安装")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("[推荐]带着配置参数创建应用容器")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run --name some-mysql -d -t -p 3306:3306 -e 参数名称1=参数名称1的值 -e 参数名称2=参数名称2的值 mysql:版本号 --character-set-server=utf8mb4")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#docker run -it --rm mysql --verbose --help  可查看可配置的参数")]),s._v("\n\ndocker run --name some-secret-mysql -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root mysql:5.7 --default_storage_engine"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("InnoDB --lower_case_table_names"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --max_allowed_packet"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("50M --character-set-server"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8mb4 --sql_mode"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n")])])])]),s._v(" "),e("li",[e("p",[s._v("将本地的配置文件映射到应用容器中")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run --name some-mysql-p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306-v /my/custom:/etc/mysql/conf.d -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("my-secret-pw -d mysql:tag\n")])])]),e("p",[s._v("在容器的宿主机中新建这样一个配置文件my.cnf(名字就用这个),然后将"),e("code",[s._v("/my/custom")]),s._v("替换成这个宿主机中的my.cnf配置文件所在的文件夹的绝对路径,这样mysql容器在创建的时候就会使用my.cnf中的所有配置来创建mysql,同样,这些在my.cnf中的配置,都可以使用"),e("code",[s._v("-e 参数1=参数1的值")]),s._v("的方式来配置")]),s._v(" "),e("p",[e("strong",[s._v("注意: 如果使用了数据卷映射数据文件, 此时mysql的大部分配置包括密码都是跟着数据文件走的,docker创建的命令不再起作用")])])])]),s._v(" "),e("h2",{attrs:{id:"_8-docker-安装-postgressql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-docker-安装-postgressql"}},[s._v("#")]),s._v(" 8.docker 安装 PostgresSql")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run --name postgres -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5432")]),s._v(":5432 -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POSTGRES_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgres -d postgres\n")])])]),e("h2",{attrs:{id:"_9-docker-安装-mongodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-docker-安装-mongodb"}},[s._v("#")]),s._v(" 9.docker 安装 Mongodb")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull mongo:latest\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器")]),s._v("\ndocker run -itd --name mongodb -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("27017")]),s._v(":27017 mongo --auth\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入容器内部")]),s._v("\ndocker "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it mongodb mongo admin\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个名为 admin，密码为 123456 的用户。")]),s._v("\ndb.createUser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("user:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dong'")]),s._v(",pwd:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123456'")]),s._v(",roles:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("role:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v(",db:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"root"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 尝试使用上面创建的用户信息进行连接。")]),s._v("\ndb.auth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin'")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123456'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("div",{staticClass:"language-tex extra-class"},[e("pre",{pre:!0,attrs:{class:"language-tex"}},[e("code",[s._v("角色功能\nRead：允许用户读取指定数据库\nreadWrite：允许用户读写指定数据库\ndbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile\nuserAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户\nclusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。\nreadAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限\nreadWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限\nuserAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限\ndbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。\nroot：只在admin数据库中可用。超级账号，超级权限\n")])])]),e("h2",{attrs:{id:"_10-docker-安装-redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-docker-安装-redis"}},[s._v("#")]),s._v(" 10.docker 安装 Redis")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull redis:latest\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器，并设置密码 开启持久化")]),s._v("\ndocker run -itd --name redis -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 redis --requirepass "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456789")]),s._v(" --appendonly "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])]),e("h2",{attrs:{id:"_11-docker-安装-elasticsearch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-docker-安装-elasticsearch"}},[s._v("#")]),s._v(" 11.docker 安装 Elasticsearch")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"_12-docker-安装-rabbitmq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-docker-安装-rabbitmq"}},[s._v("#")]),s._v(" 12.docker 安装 RabbitMQ")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker search rabbitmq:management\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull rabbitmq:management\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器")]),s._v("\ndocker run -d --name rabbit -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RABBITMQ_DEFAULT_USER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("admin -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RABBITMQ_DEFAULT_PASS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("admin -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15672")]),s._v(":15672 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5672")]),s._v(":5672 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("25672")]),s._v(":25672 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("61613")]),s._v(":61613 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1883")]),s._v(":1883 rabbitmq:management\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#登录管理页面:IP:15672  admin\tadmin")]),s._v("\n")])])]),e("h2",{attrs:{id:"_13-docker-安装-kafka"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-docker-安装-kafka"}},[s._v("#")]),s._v(" 13.docker 安装 Kafka")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull docker.io/bitnami/kafka\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器")]),s._v("\ndocker run -d --name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kafka1 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9092")]),s._v(":9092 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n --network app-bridge "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ALLOW_PLAINTEXT_LISTENER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_CFG_ZOOKEEPER_CONNECT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("81.70")]),s._v(".199.213:2181 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_BROKER_ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_HEAP_OPTS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Xmx180m -Xms180m"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_ADVERTISED_LISTENERS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PLAINTEXT://81.70.199.213:9092 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_LISTENERS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PLAINTEXT://0.0.0.0:9092  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n bitnami/kafka\n")])])]),e("div",{staticClass:"language-tex extra-class"},[e("pre",{pre:!0,attrs:{class:"language-tex"}},[e("code",[s._v("ALLOW_PLAINTEXT_LISTENER=yes：允许使用PLAINTEXT侦听器\nKAFKA_CFG_ZOOKEEPER_CONNECT：zookeeper集群地址，多节点,分割\nKAFKA_BROKER_ID：节点id，用来指定 Kafka 集群中 broker 的唯一标识，默认值为 -1。如果没有设置，那么 Kafka会自动生成一个\nKAFKA_ADVERTISED_LISTENERS：绑定公网 IP 供外部客户端使用\nKAFKA_LISTENERS：绑定私网 IP 地址供 broker 间通信使用\n")])])]),e("h2",{attrs:{id:"_14-docker-安装-rocketmq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-docker-安装-rocketmq"}},[s._v("#")]),s._v(" 14.docker 安装 RocketMQ")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询镜像仓库")]),s._v("\ndocker search rocketMQ\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull rocketMQ\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建 RocketMQ 容器")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建broker 容器")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#安装RocketMQ-Console-ng（RocketMQ管理页面）")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"_15-docker-安装-nacos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-docker-安装-nacos"}},[s._v("#")]),s._v(" 15.docker 安装 Nacos")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull nacos/nacos-server\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用自带数据库启动")]),s._v("\ndocker run -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v(":8848 --name nacos --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MODE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("standalone nacos/nacos-server:latest\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用非自带数据库启动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#挂载目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /mydata/nacos/logs/                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#新建logs目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /mydata/nacos/init.d/          \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /mydata/nacos/init.d/custom.properties        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改配置文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动")]),s._v("\ndocker  run "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--name nacos -d "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v(":8848 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--privileged"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JVM_XMS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("256m "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JVM_XMX")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("256m "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MODE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("standalone "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PREFER_HOST_MODE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hostname "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /mydata/nacos/logs:/home/nacos/logs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /mydata/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\nnacos/nacos-server\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#打开浏览器进行登录 https：xx.xx.xx.xx:8848/nacos 账号：nacos 密码：nacos")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置nacos自启动")]),s._v("\ndocker update --restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always  nacos\n")])])]),e("h2",{attrs:{id:"_16-docker-安装-sentinel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-docker-安装-sentinel"}},[s._v("#")]),s._v(" 16.docker 安装 Sentinel")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启")]),s._v("\n")])])]),e("h2",{attrs:{id:"_17-docker-安装-zookeeper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-docker-安装-zookeeper"}},[s._v("#")]),s._v(" 17.docker 安装 zookeeper")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\ndocker pull zookeeper\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启")]),s._v("\ndocker run --name zookeeper --network app-bridge -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ALLOW_ANONYMOUS_LOGIN")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes -d -it -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2181")]),s._v(":2181 zookeeper\n")])])]),e("h2",{attrs:{id:"_18-docker-安装-dubbo-admin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-docker-安装-dubbo-admin"}},[s._v("#")]),s._v(" 18.docker 安装 dubbo-admin")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker run --name some-dubbo-admin -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 -d -it -e admin.registry.address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("zookeeper://selton.cn:2181 -e admin.config-center"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("zookeeper://app-bridge:2181 -e admin.metadata-report.address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("zookeeper://app-bridge:2181  apache/dubbo-admin \n")])])]),e("h2",{attrs:{id:"_19-docker-安装-fastdfs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19-docker-安装-fastdfs"}},[s._v("#")]),s._v(" 19.docker 安装 fastDFS")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker pull delron/fastdfs\n\ndocker run -d --network"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("host --name some-tracker -v /var/fdfs/tracker:/var/fdfs delron/fastdfs tracker\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意: 需要暴露22122端口 23000 否则下面的创建会有问题 8888端口也需要暴露 将来通过这个端口访问图片")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#selton.cn替换成你的公网host或者局域网host")]),s._v("\n\ndocker run -d --network"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("host --name some-storage -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TRACKER_SERVER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("selton.cn:22122 -v /var/fdfs/storage:/var/fdfs -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GROUP_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("group1 delron/fastdfs storage\n")])])]),e("h2",{attrs:{id:"_20-docker-安装-sonar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20-docker-安装-sonar"}},[s._v("#")]),s._v(" 20.docker 安装 sonar")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意: 保持服务器剩余内存足够,默认情况下,sonarqube大约占用1.5G内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#打开http://yourhost:900/,点击"Log in"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#登录账号：admin 密码：admin")]),s._v("\ndocker run -d --name sonarqube -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SONAR_ES_BOOTSTRAP_CHECKS_DISABLE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v(":9000 sonarqube\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);