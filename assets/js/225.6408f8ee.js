(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{791:function(t,r,a){"use strict";a.r(r);var s=a(42),i=Object(s.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_3-1-字符串优化处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-字符串优化处理"}},[t._v("#")]),t._v(" 3.1 字符串优化处理")]),t._v(" "),a("h2",{attrs:{id:"_3-1-1-string对象及其特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-string对象及其特点"}},[t._v("#")]),t._v(" 3.1.1 String对象及其特点")]),t._v(" "),a("p",[t._v("String 对象是Java 语言中重要的数据类型，但它并不是Java的基本数据类型。在C语言中，对字符串的处理最通常的做法是使用char数组，但这种方式的弊端是显而易见的，数组本身无法封装字符串所需的基本方法。而在Java语言中，String对象可以任务是char数组的延伸和进一步封装。如图3.1展示了Java中String类的基本实现，它主要由3部分组成：char数组、偏移量和String的长度。char数组标识String")]),t._v(" "),a("h2",{attrs:{id:"_3-1-2-substring-方法的内存泄漏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-substring-方法的内存泄漏"}},[t._v("#")]),t._v(" 3.1.2 subString（）方法的内存泄漏")]),t._v(" "),a("h2",{attrs:{id:"_3-1-3-字符串分割和查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-字符串分割和查找"}},[t._v("#")]),t._v(" 3.1.3 字符串分割和查找")]),t._v(" "),a("h2",{attrs:{id:"_3-1-4-stringbuffer和stringbuilder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-stringbuffer和stringbuilder"}},[t._v("#")]),t._v(" 3.1.4 StringBuffer和StringBuilder")])])}),[],!1,null,null,null);r.default=i.exports}}]);